
Ian Petersen@IanLaptop MINGW64 /
$ cd ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors/

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_books_authors\manage.py", line 22, in <module>
    main()
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_books_authors\manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\__init__.py", line 401, in execute_from_command_li
ne
    utility.execute()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\__init__.py", line 377, in execute
    django.setup()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\apps\registry.py", line 91, in populate
    app_config = AppConfig.create(entry)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\apps\config.py", line 116, in create
    mod = import_module(mod_path)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\importl
ib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 972, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 984, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'app_books_authorsdjango'

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_books_authors\manage.py", line 22, in <module>
    main()
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_books_authors\manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\__init__.py", line 401, in execute_from_command_li
ne
    utility.execute()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\__init__.py", line 377, in execute
    django.setup()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\apps\registry.py", line 91, in populate
    app_config = AppConfig.create(entry)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\apps\config.py", line 116, in create
    mod = import_module(mod_path)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\importl
ib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 972, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 984, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'app_books_authorsdjango'

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py runserver
Watching for file changes with StatReloader
Exception in thread django-main-thread:
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\threadi
ng.py", line 954, in _bootstrap_inner
    self.run()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\threadi
ng.py", line 892, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 53, in wrapper
    fn(*args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\commands\runserver.py", line 110, in inner_run
    autoreload.raise_last_exception()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 76, in raise_last_exception
    raise _exception[1]
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\__init__.py", line 357, in execute
    autoreload.check_errors(django.setup)()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 53, in wrapper
    fn(*args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\apps\registry.py", line 91, in populate
    app_config = AppConfig.create(entry)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\apps\config.py", line 116, in create
    mod = import_module(mod_path)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\importl
ib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 972, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 984, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'app_books_authorsdjango'
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_books_authors\manage.py", line 22, in <module>
    main()
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_books_authors\manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\__init__.py", line 401, in execute_from_command_li
ne
    utility.execute()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\base.py", line 330, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\commands\runserver.py", line 61, in execute
    super().execute(*args, **options)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\base.py", line 371, in execute
    output = self.handle(*args, **options)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\commands\runserver.py", line 96, in handle
    self.run(**options)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\core\management\commands\runserver.py", line 103, in run
    autoreload.run_with_reloader(self.inner_run, **options)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 618, in run_with_reloader
    start_django(reloader, main_func, *args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 603, in start_django
    reloader.run(django_main_thread)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 318, in run
    self.run_loop()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 324, in run_loop
    next(ticker)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 364, in tick
    for filepath, mtime in self.snapshot_files():
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 380, in snapshot_files
    for file in self.watched_files():
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 278, in watched_files
    yield from iter_all_python_module_files()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 105, in iter_all_python_module_files
    return iter_modules_and_files(modules, frozenset(_error_files))
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\utils\autoreload.py", line 141, in iter_modules_and_files
    resolved_path = path.resolve(strict=True).absolute()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\pathlib
.py", line 1204, in resolve
    s = self._flavour.resolve(self, strict=strict)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\pathlib
.py", line 200, in resolve
    return self._ext_to_normal(_getfinalpathname(s))
OSError: [WinError 123] The filename, directory name, or volume label syntax is
incorrect: '<frozen importlib._bootstrap>'

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).

You have 18 unapplied migration(s). Your project may not work properly until you
 apply the migrations for app(s): admin, auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.
April 16, 2021 - 20:37:11
Django version 3.1.7, using settings 'project_books_authors.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
Migrations for 'app_books_authors':
  app_books_authors\migrations\0001_initial.py
    - Create model Book
    - Create model Author

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, app_books_authors, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying app_books_authors.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_books_authors.models import Book, Author
>>> Book.objects.create(title="C Sharp", desc="coding in C")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 445, in create
    obj = self.model(**kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\base.py", line 501, in __init__
    raise TypeError("%s() got an unexpected keyword argument '%s'" % (cls.__name
__, kwarg))
TypeError: Book() got an unexpected keyword argument 'desc'
>>> from app_books_authors.models import Book
>>> Book.objects.create(title="C Sharp", desc="coding in C")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 445, in create
    obj = self.model(**kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\base.py", line 501, in __init__
    raise TypeError("%s() got an unexpected keyword argument '%s'" % (cls.__name
__, kwarg))
TypeError: Book() got an unexpected keyword argument 'desc'
>>> Book.objects.create(title="C Sharp")
<Book: Book object (1)>
>>> book=Book.objects.get(id=1)
>>> book.desc="coding in C"
>>> book.save()
>>> Book.objects.get(id=1).values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Book' object has no attribute 'values'
>>> Book.objects.all().values()
<QuerySet [{'id': 1, 'title': 'C Sharp', 'created_at': datetime.datetime(2021, 4
, 17, 1, 46, 57, 628480, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 4,
 17, 1, 48, 11, 638738, tzinfo=<UTC>)}]>
>>> book.desc
'coding in C'
>>> Book.objects.create(title="Java", desc="coding in Java")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 445, in create
    obj = self.model(**kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\base.py", line 501, in __init__
    raise TypeError("%s() got an unexpected keyword argument '%s'" % (cls.__name
__, kwarg))
TypeError: Book() got an unexpected keyword argument 'desc'
>>> Book.objects.create(title="Java", desc="coding in Java")exit()
  File "<console>", line 1
    Book.objects.create(title="Java", desc="coding in Java")exit()
                                                            ^
SyntaxError: invalid syntax
>>> exit()

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ ^C

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
You are trying to add a non-nullable field 'desc' to book without a default; we
can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null
value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 2

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
No changes detected

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_books_authors.models import Book, Author
>>> Book.objects.all().values()
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\sqlite3\base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: app_books_authors_book

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 263, in __repr__
    data = list(self[:REPR_OUTPUT_SIZE + 1])
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 269, in __len__
    self._fetch_all()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 1308, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 111, in __iter__
    for row in compiler.results_iter(chunked_fetch=self.chunked_fetch, chunk_siz
e=self.chunk_size):
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\sql\compiler.py", line 1108, in results_iter
    results = self.execute_sql(MULTI, chunked_fetch=chunked_fetch, chunk_size=ch
unk_size)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\sql\compiler.py", line 1156, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._e
xecute)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\sqlite3\base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: app_books_authors_book
>>> Book.objects.all()
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\sqlite3\base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: app_books_authors_book

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 263, in __repr__
    data = list(self[:REPR_OUTPUT_SIZE + 1])
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 269, in __len__
    self._fetch_all()
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 1308, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 53, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=
self.chunk_size)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\sql\compiler.py", line 1156, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._e
xecute)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\sqlite3\base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: app_books_authors_book
>>> exit()

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
No changes detected

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_books_authors.models import Book, Author
>>> Book.objects.create(title="C Sharp", desc="coding in C")
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\sqlite3\base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: app_books_authors_book

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 447, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\base.py", line 753, in save
    self.save_base(using=using, force_insert=force_insert,
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\base.py", line 790, in save_base
    updated = self._save_table(
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\base.py", line 895, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields
, raw)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\base.py", line 933, in _do_insert
    return manager._insert(
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\query.py", line 1254, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\sql\compiler.py", line 1397, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._e
xecute)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\backends\sqlite3\base.py", line 413, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: app_books_authors_book
>>> exit()

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
April 16, 2021 - 21:08:28
Django version 3.1.7, using settings 'project_books_authors.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ ^C

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
No changes detected

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_books_authors.models import Book, Author
>>> exit()

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations app_books_authors
Migrations for 'app_books_authors':
  app_books_authors\migrations\0001_initial.py
    - Create model Book
    - Create model Author

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, app_books_authors, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying app_books_authors.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_books_authors.models import Book, Author
>>> Book.objects.all()
<QuerySet []>
>>> Book.objects.create(title="C Sharp", desc="code in C")
<Book: Book object (1)>
>>> Book.objects.create(title="Java", desc="code in Java")
<Book: Book object (2)>
>>> Book.objects.create(title="Python", desc="code in Python")
<Book: Book object (3)>
>>> Book.objects.create(title="PHP", desc="code in PHP")
<Book: Book object (4)>
>>> Book.objects.create(title="Ruby", desc="code in Ruby")
<Book: Book object (5)>
>>> Author.objects.create(first_name="Jane", last_name="Austen")
<Author: Author object (1)>
>>> Author.objects.create(first_name="Emily", last_name="Dickinson")
<Author: Author object (2)>
>>> Author.objects.create(first_name="Fyodor", last_name="Dostoevsky")
<Author: Author object (3)>
>>> Author.objects.create(first_name="William", last_name="Shakespeare")
<Author: Author object (4)>
>>> Author.objects.create(first_name="Lau", last_name="Tzu")
<Author: Author object (5)>
>>> exit()

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
You are trying to add a non-nullable field 'notes' to author without a default;
we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null
value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 2

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py makemigrations
Migrations for 'app_books_authors':
  app_books_authors\migrations\0002_author_notes.py
    - Add field notes to author

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, app_books_authors, auth, contenttypes, sessions
Running migrations:
  Applying app_books_authors.0002_author_notes... OK

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_books_authors.models import Book, Author
>>> book=Book.objects.get(title="C Sharp)
  File "<console>", line 1
    book=Book.objects.get(title="C Sharp)
                                         ^
SyntaxError: EOL while scanning string literal
>>> book=Book.objects.get(title="C Sharp")
>>> book.title="C#"
>>> book.save()
>>> author=Author.objects.get(id=4)
>>> author.first_name="Bill"
>>> author.save()
>>> author=Author.objects.get(id=1)
>>> author.book=Book.objects.get(id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\fields\related_descriptors.py", line 545, in __set__
    raise TypeError(
TypeError: Direct assignment to the forward side of a many-to-many set is prohib
ited. Use book.set() instead.
>>> exit()

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$

**************************************
(stopped to sleep and try again in morning)
**************************************


Ian Petersen@IanLaptop MINGW64 /
$ cd ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors/

Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_books_authors
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_books_authors import Book, Author
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ImportError: cannot import name 'Book' from 'app_books_authors' (C:\Users\Ian Pe
tersen\Desktop\Dojo\python_stack\django\django_orm\project_books_authors\app_boo
ks_authors\__init__.py)
>>> from app_books_authors.models import Book, Author
>>> Author.objects.get(id=4).first_name
'Bill'
>>> book=Book.objects.get(id=1)
>>> book=Book.objects.filter(id=1,id=2)
  File "<console>", line 1
SyntaxError: keyword argument repeated: id
>>> book=Book.objects.filter(id=1, 2)
  File "<console>", line 1
    book=Book.objects.filter(id=1, 2)
                                    ^
SyntaxError: positional argument follows keyword argument
>>> book=Book.objects.filter(id=1,2)
  File "<console>", line 1
    book=Book.objects.filter(id=1,2)
                                   ^
SyntaxError: positional argument follows keyword argument
>>> book.title
'C#'
>>> book.authors=Author.objects.get(id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\site-pa
ckages\django\db\models\fields\related_descriptors.py", line 545, in __set__
    raise TypeError(
TypeError: Direct assignment to the reverse side of a many-to-many set is prohib
ited. Use authors.set() instead.
>>> author=Author.objects.get(id=1)
>>> book.authors.set(id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: set() got an unexpected keyword argument 'id'
>>> book.authors.add(author)
>>> book=Book.objects.get(id=2)
>>> book.authors.add(author)
>>> book.save()
>>> author.books
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'books'
>>> author.book
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager
.<locals>.ManyRelatedManager object at 0x000001AE96F85610>
>>> author.book.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>]>
>>> author=Author.objects.get(id=2)
>>> author.book.add(Book.objects.get(id=1))
>>> author.book.add(Book.objects.get(id=2), Book.objects.get(id=3))
>>> author.books.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'books'
>>> author.save()
>>> author.book.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object
(3)>]>
>>> book=Book.objects.get(id=1)
>>> book.author.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Book' object has no attribute 'author'
>>> book.authors.all()
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>
>>> Author.objects.get(id=3).add(Book.objects.get(id=1), Book.objects.get(id=2),
 Book.objects.get(id=3), Book.objects.get(id=4))
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'add'
>>> author=Author.objects.get(id=3)
>>> author.book.add(Book.objects.get(id=1), Book.objects.get(id=2), Book.objects
.get(id=3), Book.objects.get(id=4))
>>> author.save()
>>> author.book.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object
(3)>, <Book: Book object (4)>]>
>>> author=Author.objects.get(id=4)
>>> author.book.add(Book.objects.get(id=1), Book.objects.get(id=2), Book.objects
.get(id=3), Book.objects.get(id=4), Book.objects.get(id=5))
>>> Book.objects.get(id=3).authors.all()
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Au
thor object (4)>]>
>>> Book.objects.get(id=3).author.first().delete()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Book' object has no attribute 'author'
>>> Book.objects.get(id=3).authors.first().delete()
(4, {'app_books_authors.Author_book': 3, 'app_books_authors.Author': 1})
>>> Book.objects.get(id=3).authors.all()
<QuerySet [<Author: Author object (3)>, <Author: Author object (4)>]>
>>> Book.objects.get(id=2).authors.add(Author.objects.get(id=5))
>>> Author.objects.get(id=3).book.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object
(3)>, <Book: Book object (4)>]>
>>> Book.objects.get(id=5).authors.all()
<QuerySet [<Author: Author object (4)>]>
