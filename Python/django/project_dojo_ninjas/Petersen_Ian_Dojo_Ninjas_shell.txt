Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/CompletedAssignments (main)
$ cd ~/Desktop/Dojo/python_stack/django/django_orm/
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm
$ django-admin startproject project_dojo_ninjas
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm
$ cd project_dojo_ninjas/
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py startapp app_dojo_ninjas
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ cd ..
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm
$ cd project_dojo_ninjas/
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ cd project_dojo_ninjas/
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/project_dojo_ninjas
$ code settings.py
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/project_dojo_ninjas
$ code urls.py
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/project_dojo_ninjas
$ cd ..
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ cd ..
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm
$ cd project_dojo_ninjas/
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ cd app_dojo_ninjas/
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ touch urls.py
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ code urls.py
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ mkdir templates
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ mkdir static
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ cd templates
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas/templates
$ touch index.html
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas/templates
$ cd ..
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ cd static
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas/static
$ touch style.css
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas/static
$ cd ..
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ cd ..
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ cd app_dojo_ninjas/
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ code views.py
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ code models.py
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ python cd ..
C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\python.exe: can't o
pen file 'C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\proj
ect_dojo_ninjas\app_dojo_ninjas\cd': [Errno 2] No such file or directory
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas/app_dojo_ninjas
$ cd ..
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py makemigrations
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_dojo_ninjas\manage.py", line 21, in <module>
    main()
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_dojo_ninjas\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\management\__init__.py", line 381,
in execute_from_command_line
    utility.execute()
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\management\__init__.py", line 375,
in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\management\base.py", line 323, in r
un_from_argv
    self.execute(*args, **cmd_options)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\management\base.py", line 361, in e
xecute
    self.check()
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\management\base.py", line 387, in c
heck
    all_issues = self._run_checks(
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\management\base.py", line 377, in _
run_checks
    return checks.run_checks(**kwargs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\checks\registry.py", line 72, in ru
n_checks
    new_errors = check(app_configs=app_configs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\checks\urls.py", line 13, in check_
url_config
    return check_resolver(resolver)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\core\checks\urls.py", line 23, in check_
resolver
    return check_method()
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\utils\functional.py", line 80, in __get_
_
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\urls\resolvers.py", line 579, in url_pat
terns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\utils\functional.py", line 80, in __get_
_
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\urls\resolvers.py", line 572, in urlconf
_module
    return import_module(self.urlconf_name)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\importl
ib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 680, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_dojo_ninjas\project_dojo_ninjas\urls.py", line 21, in <module>
    path('', include('app_dojo_ninjas.urls'))
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\urls\conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "C:\Users\Ian Petersen\AppData\Local\Programs\Python\Python39\lib\importl
ib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 680, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_dojo_ninjas\app_dojo_ninjas\urls.py", line 2, in <module>
    from . import views
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\django\django_orm\projec
t_dojo_ninjas\app_dojo_ninjas\views.py", line 2
    from .models import >>>>
                        ^
SyntaxError: invalid syntax
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py makemigrations
Migrations for 'app_dojo_ninjas':
  app_dojo_ninjas\migrations\0001_initial.py
    - Create model Dojo
    - Create model Ninja
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, app_dojo_ninjas, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying app_dojo_ninjas.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying sessions.0001_initial... OK
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_dojo_ninjas.models import Dojo
>>> from app_dojo_ninjas.models import Ninja
>>> Dojo.objects.create(name = "Boss", city = "Dallas", state = "Texas")
<Dojo: Dojo object (1)>
>>> Dojo.objects.create(name = "Secondary", city = "Chicago', state = "Illinois"
)
  File "<console>", line 1
    Dojo.objects.create(name = "Secondary", city = "Chicago', state = "Illinois"
)
                                                                       ^
SyntaxError: invalid syntax
>>> Dojo.objects.create(name = "Secondary", city = "Chicago", state = "Illinois"
)
<Dojo: Dojo object (2)>
>>> Dojo.objects.create(name="Tertiary", city="Arlington", state="Virginia")
<Dojo: Dojo object (3)>
>>> delete_dojo = Dojo.objects.all()
>>> delete_dojo.delete()
(3, {'app_dojo_ninjas.Ninja': 0, 'app_dojo_ninjas.Dojo': 3})
>>> Dojo.objects.all()
<QuerySet []>
>>> Dojo.objects.first()
>>> Dojo.objects.get(id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\manager.py", line 82, in manag
er_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\query.py", line 406, in get
    raise self.model.DoesNotExist(
app_dojo_ninjas.models.Dojo.DoesNotExist: Dojo matching query does not exist.
>>> Dojo.objects.create(name = "Primero", city = "Weatherford", state = "Texas")

<Dojo: Dojo object (4)>
>>> Dojo.objects.create(name = "It's Alright", city = "Los Angeles", state = "Ca
lifornia")
<Dojo: Dojo object (5)>
>>> Dojo.objects.create(name = "Ride your bicycle", city = "Portlandia", state =
 "Oregon")
<Dojo: Dojo object (6)>
>>> Ninja.objects.create(dojo = Dojo.objects.get(id=1), first_name="Me", last_na
me="Too")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\manager.py", line 82, in manag
er_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\query.py", line 406, in get
    raise self.model.DoesNotExist(
app_dojo_ninjas.models.Dojo.DoesNotExist: Dojo matching query does not exist.
>>> Ninja.objects.create(dojo = Dojo.objects.get(id=4), first_name="Me", last_na
me="Too")
<Ninja: Ninja object (1)>
>>> Ninja.object.create(dojo=Dojo.objects.get(id=4), first_name="Nick", last_nam
e="Nelson")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Ninja' has no attribute 'object'
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=4), first_name="Nick", last_na
me="Nelson")
<Ninja: Ninja object (2)>
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=4), first_name="Cai", last_nam
e="Neilson")
<Ninja: Ninja object (3)>
>>> Ninja.objects.create(dojo=Dojo.objects.create(id=5), first_name="Matt", last
_name="Rix")
Traceback (most recent call last):
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\utils.py", line 84, in _exec
ute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\sqlite3\base.py", line 383,
in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.IntegrityError: UNIQUE constraint failed: app_dojo_ninjas_dojo.id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\manager.py", line 82, in manag
er_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\query.py", line 422, in create

    obj.save(force_insert=True, using=self.db)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\base.py", line 740, in save
    self.save_base(using=using, force_insert=force_insert,
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\base.py", line 777, in save_ba
se
    updated = self._save_table(
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\base.py", line 870, in _save_t
able
    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\base.py", line 907, in _do_ins
ert
    return manager._insert([self], fields=fields, return_id=update_pk,
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\manager.py", line 82, in manag
er_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\query.py", line 1186, in _inse
rt
    return query.get_compiler(using=using).execute_sql(return_id)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\sql\compiler.py", line 1335, i
n execute_sql
    cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\utils.py", line 99, in execu
te
    return super().execute(sql, params)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\utils.py", line 67, in execu
te
    return self._execute_with_wrappers(sql, params, many=False, executor=self._e
xecute)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\utils.py", line 76, in _exec
ute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\utils.py", line 84, in _exec
ute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\utils.py", line 84, in _exec
ute
    return self.cursor.execute(sql, params)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\backends\sqlite3\base.py", line 383,
in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.IntegrityError: UNIQUE constraint failed: app_dojo_ninjas_dojo.i
d
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=5), first_name="Matt", last_na
me="Rix")
<Ninja: Ninja object (4)>
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=5), first_name="Jon Paul", las
t_name = "Harmer")
<Ninja: Ninja object (5)>
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=5), first_name="Troy", last_na
me="McMurtrey")
<Ninja: Ninja object (6)>
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=6), first_name="Marty", last_n
ame="McFly")
<Ninja: Ninja object (7)>
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=6), first_name="Doc", last_nam
e="Brown")
<Ninja: Ninja object (8)>
>>> Ninja.objects.create(dojo=Dojo.objects.get(id=6), first_name="Biff", last_na
me="Tannen")
<Ninja: Ninja object (9)>
>>> Ninja.objects.filter(Dojo.objects.get(id=4))
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\manager.py", line 82, in manag
er_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\query.py", line 892, in filter

    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\query.py", line 910, in _filte
r_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\sql\query.py", line 1290, in a
dd_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\sql\query.py", line 1315, in _
add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Users\Ian Petersen\Desktop\Dojo\python_stack\my_environment\ianDojoVE
nv\ianDojoVEnv\lib\site-packages\django\db\models\sql\query.py", line 1187, in b
uild_filter
    arg, value = filter_expr
TypeError: cannot unpack non-iterable Dojo object
>>> Ninja.objects.filter(dojo=Dojo.objects.get(id=4))
<QuerySet [<Ninja: Ninja object (1)>, <Ninja: Ninja object (2)>, <Ninja: Ninja o
bject (3)>]>
>>> Ninja.objects.filter(dojo=Dojo.objects.first())
<QuerySet [<Ninja: Ninja object (1)>, <Ninja: Ninja object (2)>, <Ninja: Ninja o
bject (3)>]>
>>> Ninja.objects.filter(dojo=Dojo.objects.last())
<QuerySet [<Ninja: Ninja object (7)>, <Ninja: Ninja object (8)>, <Ninja: Ninja o
bject (9)>]>
>>> Ninja.objects.last().dojo()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'Dojo' object is not callable
>>> Ninja.objects.last().dojo().name()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'Dojo' object is not callable
>>> Ninja.objects.last().dojo
<Dojo: Dojo object (6)>
>>> exit
Use exit() or Ctrl-Z plus Return to exit
>>> exit()
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py makemigrations
You are trying to add a non-nullable field 'desc' to dojo without a default; we
can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null
value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 2
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py makemigrations
Migrations for 'app_dojo_ninjas':
  app_dojo_ninjas\migrations\0002_dojo_desc.py
    - Add field desc to dojo
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, app_dojo_ninjas, auth, contenttypes, sessions
Running migrations:
  Applying app_dojo_ninjas.0002_dojo_desc... OK
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ Dojo.objects.create(name="HIgh Tech", city="The Cloud", state="Transcendent")
bash: syntax error near unexpected token `name="HIgh Tech",'
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ Dojo.objects.create(name="HIgh Tech", city="The Cloud", state="Transcendent", desc="new school")
bash: syntax error near unexpected token `name="HIgh Tech",'
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$ python manage.py shell
Python 3.9.4 (tags/v3.9.4:1f2e308, Apr  4 2021, 13:27:16) [MSC v.1928 64 bit (AM
D64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from app_dojo_ninjas.models import Dojo
>>> from app_dojo_ninjas.models import Ninja
>>> Dojo.objects.create(name="High Tech", city="The Cloud", state="Transcendent"
)
<Dojo: Dojo object (7)>
>>> exit()
(ianDojoVEnv)
Ian Petersen@IanLaptop MINGW64 ~/Desktop/Dojo/python_stack/django/django_orm/project_dojo_ninjas
$
